{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass ForumService {\n  constructor() {\n    this.STORAGE_KEY = 'forum_problems';\n  }\n  getProblems() {\n    const problems = localStorage.getItem(this.STORAGE_KEY);\n    return problems ? JSON.parse(problems) : [];\n  }\n  getPostById(id) {\n    const problems = this.getProblems();\n    return problems.find(post => post.id === id);\n  }\n  addProblem(problem) {\n    const problems = this.getProblems();\n    problem.id = this.generateUniqueId();\n    problems.push(problem);\n    localStorage.setItem(this.STORAGE_KEY, JSON.stringify(problems));\n  }\n  addReplyToPost(id, reply) {\n    const problems = this.getProblems();\n    const post = problems.find(p => p.id === id);\n    if (post) {\n      if (!post.replies) {\n        post.replies = [];\n      }\n      post.replies.push(reply);\n      this.saveProblems(problems);\n    }\n  }\n  deleteReplyFromPost(postId, reply) {\n    const problems = this.getProblems();\n    const post = problems.find(p => p.id === postId);\n    if (post && post.replies) {\n      const index = post.replies.findIndex(r => r.message === reply.message);\n      if (index !== -1) {\n        post.replies.splice(index, 1);\n        this.saveProblems(problems);\n      }\n    }\n  }\n  deletePost(postId) {\n    const problems = this.getProblems();\n    const index = problems.findIndex(post => post.id === postId);\n    if (index !== -1) {\n      problems.splice(index, 1);\n      this.saveProblems(problems);\n    }\n  }\n  saveProblems(problems) {\n    localStorage.setItem(this.STORAGE_KEY, JSON.stringify(problems));\n  }\n  generateUniqueId() {\n    return '_' + Math.random().toString(36).substr(2, 9);\n  }\n}\nForumService.ɵfac = function ForumService_Factory(t) {\n  return new (t || ForumService)();\n};\nForumService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ForumService,\n  factory: ForumService.ɵfac,\n  providedIn: 'root'\n});\nexport { ForumService };","map":{"version":3,"names":["ForumService","constructor","STORAGE_KEY","getProblems","problems","localStorage","getItem","JSON","parse","getPostById","id","find","post","addProblem","problem","generateUniqueId","push","setItem","stringify","addReplyToPost","reply","p","replies","saveProblems","deleteReplyFromPost","postId","index","findIndex","r","message","splice","deletePost","Math","random","toString","substr","factory","ɵfac","providedIn"],"sources":["/Users/vithushan/Desktop/vithushan.nosync/Code/Java/projetAnnuel2023/angular/vecoelo/src/app/components/forum/forum.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForumService {\n  private STORAGE_KEY = 'forum_problems';\n\n  constructor() {}\n\n  getProblems(): any[] {\n    const problems = localStorage.getItem(this.STORAGE_KEY);\n    return problems ? JSON.parse(problems) : [];\n  }\n\n  getPostById(id: string): any {\n    const problems = this.getProblems();\n    return problems.find((post: any) => post.id === id);\n  }\n\n  addProblem(problem: any) {\n    const problems = this.getProblems();\n    problem.id = this.generateUniqueId();\n    problems.push(problem);\n    localStorage.setItem(this.STORAGE_KEY, JSON.stringify(problems));\n  }\n\n  addReplyToPost(id: string, reply: any) {\n    const problems = this.getProblems();\n    const post = problems.find((p: any) => p.id === id);\n    if (post) {\n      if (!post.replies) {\n        post.replies = [];\n      }\n      post.replies.push(reply);\n      this.saveProblems(problems);\n    }\n  }\n\n  deleteReplyFromPost(postId: string, reply: any) {\n    const problems = this.getProblems();\n    const post = problems.find(p => p.id === postId);\n    if (post && post.replies) {\n      const index = post.replies.findIndex((r: any) => r.message === reply.message);\n      if (index !== -1) {\n        post.replies.splice(index, 1);\n        this.saveProblems(problems);\n      }\n    }\n  }\n\n  deletePost(postId: string) {\n    const problems = this.getProblems();\n    const index = problems.findIndex((post: any) => post.id === postId);\n    if (index !== -1) {\n      problems.splice(index, 1);\n      this.saveProblems(problems);\n    }\n  }\n  private saveProblems(problems: any[]) {\n    localStorage.setItem(this.STORAGE_KEY, JSON.stringify(problems));\n  }\n\n  private generateUniqueId(): string {\n    return '_' + Math.random().toString(36).substr(2, 9);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
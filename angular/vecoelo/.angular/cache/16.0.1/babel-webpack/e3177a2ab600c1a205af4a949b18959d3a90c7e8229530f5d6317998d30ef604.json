{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nclass UserService {\n  constructor(router) {\n    this.router = router;\n    this.users = [];\n    this.utilisateurConnecte = null;\n    // Récupérer les utilisateurs stockés dans le localStorage lors de l'initialisation du service\n    const storedUsers = localStorage.getItem('users');\n    if (storedUsers) {\n      this.users = JSON.parse(storedUsers);\n    }\n    const storedUser = localStorage.getItem('utilisateurConnecte');\n    if (storedUser) {\n      this.utilisateurConnecte = JSON.parse(storedUser);\n    }\n  }\n  registerUser(pseudo, email, password) {\n    const userExists = this.checkEmailExists(email);\n    if (userExists) {\n      console.log(\"L'email est déjà utilisé.\");\n      return false;\n    } else {\n      const user = {\n        pseudo,\n        email,\n        password\n      };\n      this.users.push(user);\n      // Enregistrer les utilisateurs dans le localStorage\n      localStorage.setItem('users', JSON.stringify(this.users));\n      console.log('Utilisateur enregistré :', user);\n      return true;\n    }\n  }\n  loginUser(email, password) {\n    const user = this.users.find(u => u.email === email && u.password === password);\n    if (user) {\n      this.utilisateurConnecte = user;\n      localStorage.setItem('utilisateurConnecte', JSON.stringify(user));\n      console.log('Utilisateur connecté :', user);\n      this.router.navigate(['/home']); // Rediriger vers la page d'accueil\n      return true;\n    } else {\n      console.log('Échec de la connexion : email ou mot de passe incorrect');\n      return false;\n    }\n  }\n  checkEmailExists(email) {\n    const user = this.users.find(u => u.email === email);\n    return !!user;\n  }\n  deconnexion() {\n    this.utilisateurConnecte = null;\n    localStorage.removeItem('utilisateurConnecte');\n    // Autres logiques de déconnexion si nécessaire\n  }\n}\n\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.Router));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});\nexport { UserService };","map":{"version":3,"names":["UserService","constructor","router","users","utilisateurConnecte","storedUsers","localStorage","getItem","JSON","parse","storedUser","registerUser","pseudo","email","password","userExists","checkEmailExists","console","log","user","push","setItem","stringify","loginUser","find","u","navigate","deconnexion","removeItem","i0","ɵɵinject","i1","Router","factory","ɵfac","providedIn"],"sources":["/Users/vithushan/Desktop/vithushan.nosync/Code/Java/projetAnnuel2023/angular/vecoelo/src/app/components/login/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private users: User[] = [];\n  utilisateurConnecte: User | null = null;\n\n  constructor(private router: Router) {\n    // Récupérer les utilisateurs stockés dans le localStorage lors de l'initialisation du service\n    const storedUsers = localStorage.getItem('users');\n    if (storedUsers) {\n      this.users = JSON.parse(storedUsers);\n    }\n    const storedUser = localStorage.getItem('utilisateurConnecte');\n    if (storedUser) {\n      this.utilisateurConnecte = JSON.parse(storedUser);\n    }\n  }\n\n  registerUser(pseudo: string, email: string, password: string): boolean {\n    const userExists = this.checkEmailExists(email);\n    if (userExists) {\n      console.log(\"L'email est déjà utilisé.\");\n      return false;\n    } else {\n      const user: User = { pseudo, email, password };\n      this.users.push(user);\n      // Enregistrer les utilisateurs dans le localStorage\n      localStorage.setItem('users', JSON.stringify(this.users));\n      console.log('Utilisateur enregistré :', user);\n      return true;\n    }\n  }\n\n  loginUser(email: string, password: string): boolean {\n    const user = this.users.find(u => u.email === email && u.password === password);\n    if (user) {\n      this.utilisateurConnecte = user;\n      localStorage.setItem('utilisateurConnecte', JSON.stringify(user));\n      console.log('Utilisateur connecté :', user);\n      this.router.navigate(['/home']); // Rediriger vers la page d'accueil\n      return true;\n    } else {\n      console.log('Échec de la connexion : email ou mot de passe incorrect');\n      return false;\n    }\n  }\n\n  checkEmailExists(email: string): boolean {\n    const user = this.users.find(u => u.email === email);\n    return !!user;\n  }\n\n  deconnexion(): void {\n    this.utilisateurConnecte = null;\n    localStorage.removeItem('utilisateurConnecte');\n    // Autres logiques de déconnexion si nécessaire\n  }\n}\n\ninterface User {\n  pseudo: string;\n  email: string;\n  password: string;\n}\n"],"mappings":";;AAGA,MAGaA,WAAW;EAItBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAHlB,KAAAC,KAAK,GAAW,EAAE;IAC1B,KAAAC,mBAAmB,GAAgB,IAAI;IAGrC;IACA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAIF,WAAW,EAAE;MACf,IAAI,CAACF,KAAK,GAAGK,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC;;IAEtC,MAAMK,UAAU,GAAGJ,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC;IAC9D,IAAIG,UAAU,EAAE;MACd,IAAI,CAACN,mBAAmB,GAAGI,IAAI,CAACC,KAAK,CAACC,UAAU,CAAC;;EAErD;EAEAC,YAAYA,CAACC,MAAc,EAAEC,KAAa,EAAEC,QAAgB;IAC1D,MAAMC,UAAU,GAAG,IAAI,CAACC,gBAAgB,CAACH,KAAK,CAAC;IAC/C,IAAIE,UAAU,EAAE;MACdE,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxC,OAAO,KAAK;KACb,MAAM;MACL,MAAMC,IAAI,GAAS;QAAEP,MAAM;QAAEC,KAAK;QAAEC;MAAQ,CAAE;MAC9C,IAAI,CAACX,KAAK,CAACiB,IAAI,CAACD,IAAI,CAAC;MACrB;MACAb,YAAY,CAACe,OAAO,CAAC,OAAO,EAAEb,IAAI,CAACc,SAAS,CAAC,IAAI,CAACnB,KAAK,CAAC,CAAC;MACzDc,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEC,IAAI,CAAC;MAC7C,OAAO,IAAI;;EAEf;EAEAI,SAASA,CAACV,KAAa,EAAEC,QAAgB;IACvC,MAAMK,IAAI,GAAG,IAAI,CAAChB,KAAK,CAACqB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACZ,KAAK,KAAKA,KAAK,IAAIY,CAAC,CAACX,QAAQ,KAAKA,QAAQ,CAAC;IAC/E,IAAIK,IAAI,EAAE;MACR,IAAI,CAACf,mBAAmB,GAAGe,IAAI;MAC/Bb,YAAY,CAACe,OAAO,CAAC,qBAAqB,EAAEb,IAAI,CAACc,SAAS,CAACH,IAAI,CAAC,CAAC;MACjEF,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,IAAI,CAAC;MAC3C,IAAI,CAACjB,MAAM,CAACwB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;MACjC,OAAO,IAAI;KACZ,MAAM;MACLT,OAAO,CAACC,GAAG,CAAC,yDAAyD,CAAC;MACtE,OAAO,KAAK;;EAEhB;EAEAF,gBAAgBA,CAACH,KAAa;IAC5B,MAAMM,IAAI,GAAG,IAAI,CAAChB,KAAK,CAACqB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACZ,KAAK,KAAKA,KAAK,CAAC;IACpD,OAAO,CAAC,CAACM,IAAI;EACf;EAEAQ,WAAWA,CAAA;IACT,IAAI,CAACvB,mBAAmB,GAAG,IAAI;IAC/BE,YAAY,CAACsB,UAAU,CAAC,qBAAqB,CAAC;IAC9C;EACF;;;AAtDW5B,WAAW,C;mBAAXA,WAAW,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;AAAXhC,WAAW,C;SAAXA,WAAW;EAAAiC,OAAA,EAAXjC,WAAW,CAAAkC,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPnC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}